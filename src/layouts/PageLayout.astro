---
import Head from "@components/Head.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import { SITE } from "@consts";
import { getLangFromUrl, useTranslations } from '../i18n/config';

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// Get localized site title
const metaKey = `meta.${title.toLowerCase()}` as const;
const localizedTitle = t(metaKey as any) || title;
---

<!doctype html>
<html lang={lang}>
  <head>
    <Head title={`${localizedTitle} â€¢ ${SITE.NAME}`} description={description} />
    <script is:inline>
      (function() {
        const path = window.location.pathname;
        
        // Skip for static assets and API routes
        if (path.match(/\.(ico|png|jpg|jpeg|svg|css|js|json|txt|xml)$/) ||
            path.startsWith('/api/') ||
            path.startsWith('/fonts/')) {
          return;
        }

        const match = path.match(/^\/([^/]+)/);
        const prefix = match && match[1] ? match[1] : '';
        const prefixLower = prefix.toLowerCase();

        // If there's no valid language prefix, add one based on user preference
        if (prefixLower !== 'en' && prefixLower !== 'zh-cn') {
          const storedLang = localStorage.getItem('preferredLanguage');
          const browserLang = navigator.language.toLowerCase();
          const lang = storedLang ||
            (browserLang.startsWith('zh') ? 'zh-CN' : 
             browserLang.startsWith('en') ? 'en' : 'en');
          
          const cleanPath = path.replace(/^\/+/, '');
          const newPath = `/${lang}/${cleanPath}`.replace(/\/+/g, '/');
          window.location.replace(newPath);
        }
        // Do not handle zh-cn -> zh-CN normalization here; let routing.ts handle it
      })();
    </script>
  </head>
  <body>
    <Header />
    <main>
      <slot />
    </main>
    <Footer />
    <script>
      import { restoreScrollPosition } from '../lib/scroll';
      
      function init() {
        requestAnimationFrame(() => {
          restoreScrollPosition();
        });
      }
      
      window.addEventListener('load', init);
      document.addEventListener('astro:page-load', init);
    </script>
  </body>
</html>